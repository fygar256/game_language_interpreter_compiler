・Jun Mizutani氏のGAME言語の文法を修正してアップします

<行番号>   1 〜 32767
<10進定数> -32768 〜 32767
<16進定数> $0000 〜 $FFFF
<文字定数> "文字"
<変数名>   A 〜 Z または冗長形(ABC等 先頭1文字が有効)

<1バイト配列> ::= 変数名 ( <式> )
                  変数の値 + 2 * 式の値 のアドレスの内容を値とする．

<2バイト配列> ::= 変数名 : <式> )
                  変数の値 + 式の値 のアドレスの内容を値とする．

<定数> ::= <10進定数> | <16進定数> | <文字定数>

<変数> ::= <変数名> | <1バイト配列> | <2バイト配列>

<式> ::= <項> | <項> <二項演算子> <項>

<項> ::= <定数> | <変数> | <配列> |（ <式> ）| <単項演算子> <項>　|  $  | ?
              $ は一文字入力、? は数値入力

<二項演算子> ::= + | - | * | / | = | <> | < | > | <= | >=
                比較演算 は 真:1, 偽:0の値を取る．

<単項演算子> ::= - | + | % | ' | #
                 + は絶対値, % は直前に実行した除算の余り,
                 ' は乱数, #は否定．
<行> ::= <行番号> スペース <文> [ 空白 <文> ] 改行
         | <行番号> スペース以外の文字 コメント 改行

<文>
    <変数>=<式>       変数への代入
    #=<式>            <式>の値の行番号の文にジャンプ(GOTO)
                      行番号がなければ行番号より大きい最初の行へジャンプ
    #=-1              プログラムの終了(END)
    !=<式>            <式>の値の行番号のサブルーチンへジャンプ(GOSUB)
    ]                 サブルーチンから戻る(RETURN)
    ;=<式>            式の値が真の場合は次の文に進み，
                      偽の場合は次の行を実行．
    @                 DO
    @=(式)            UNTIL
    変数=初期値,終値  FOR
    @=式              NEXT
    /                 改行出力
    "文字列"          文字列出力
    ?=<式>            <式>の値の10進数  数値出力
    ??=<式>           <式>の値の16進4桁 数値出力
    ?$=<式>           <式>の値の下位1バイトの16進2桁の数値出力
    ?(n)=<式>         <式>の値の10進数n桁右詰め数値出力
    $=<式>            <式>の値の下位バイトを文字コードとする１文字を出力
    .=<式>            <式>の値の下位バイトの数だけ空白を出力
    '=<式>            <式>の値で乱数シードを設定
